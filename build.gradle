buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.3.5.RELEASE")
    }
}


//plugins {
//    id 'com.craigburke.karma' version '1.4.3'
//}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'application'


jar {
    baseName = 'omnido'
    version =  '0.1.0'
}

repositories {
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

dependencies {
// todo: add security in due course
// uncomment next line to add security to boot app - but will require user/pass for all resources
//    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security', version:'1.3.5.RELEASE'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-web', version: '1.3.5.RELEASE'
    compile("org.springframework.boot:spring-boot-devtools")
    testCompile(group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '1.3.5.RELEASE') {
        exclude(module: 'commons-logging')
    }
    testCompile group: 'org.webjars', name: 'angularjs', version: '1.3.8'
    testCompile group: 'org.webjars', name: 'jasmine', version: '2.0.0'
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

bootRun {
    addResources = true
}

task runApp(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = 'com.omnido.app.Application'
}

bootRepackage {
    mainClass = 'com.omnido.app.Application'
}

// todo: need to debug Karma to get this working
//karma {
//    basePath = 'src/assets' // <1>
//    colors = true // <2>
//    profile 'angularJS' // <3>
//
//    browsers = ['PhantomJS'] // <4>
//    frameworks = ['jasmine'] // <5>
//    reporters = ['junit'] // <6>
//}
//
//karma {
//    profile('default')  {
//        libraryBases = ['**/libs/']
//        libraryFiles = ['jquery.js', 'lib1.js'] // <1>
//
//        sourceBases = ['src/', 'app/']
//        sourceFiles = ['source1.js', '**/*.js'] // <2>
//
//        testBases = ['tests/']
//        testFiles = ['**/*test.js'] // <3>
//    }
//}
